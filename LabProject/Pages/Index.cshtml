@page
@model LabProject.Pages.IndexModel
@{
    ViewData["Title"] = "Class Management";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-4">
            <div class="card shadow-lg">
                <div class="card-header">
                    <h4>@(Model.EditId.HasValue ? "Edit Class" : "Add Class")</h4>
                </div>
                <div class="card-body">
                    <form method="post">
                        <input type="hidden" asp-for="EditId" />
                        <div class="mb-3">
                            <label class="form-label">Class Name</label>
                            <input asp-for="NewClass.Name" class="form-control" required />
                            <span asp-validation-for="NewClass.Name" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Person Count</label>
                            <input asp-for="NewClass.PersonCount" class="form-control" type="number" required />
                            <span asp-validation-for="NewClass.PersonCount" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea asp-for="NewClass.Description" class="form-control"></textarea>
                        </div>
                        <div class="mb-3 form-check">
                            <input asp-for="NewClass.IsActive" class="form-check-input" type="checkbox" id="isActiveCheckbox" />
                            <label class="form-check-label" for="isActiveCheckbox">Is Active</label>
                        </div>
                        <button type="submit" class="btn btn-success w-100">
                            @(Model.EditId.HasValue ? "Update Class" : "Add Class")
                        </button>
                        @if (Model.EditId.HasValue)
                        {
                            <a asp-page="/Index" class="btn btn-secondary w-100 mt-2">Cancel</a>
                        }
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card shadow-lg">
                <div class="card-header">
                    <h4>Class List</h4>
                </div>
                <div class="card-body">
                    <form asp-page="/Logout" method="post" class="mb-3">
                        <button type="submit" class="btn btn-pink">Logout</button>
                    </form>

                    <form method="get" class="row g-3 mb-3">
                        <div class="col-md-5">
                            <input type="text" name="SearchClassName" value="@Model.SearchClassName" class="form-control" placeholder="Search by Class Name" />
                        </div>
                        <div class="col-md-4">
                            <input type="number" name="MinStudentCount" value="@Model.MinStudentCount" class="form-control" placeholder="Min Person Count" />
                        </div>
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-pink w-100">Filter</button>
                        </div>
                    </form>

                    <div class="table-wrapper">
                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th class="selectable" data-column="Id">Id</th>
                                    <th class="selectable" data-column="Name">Class Name</th>
                                    <th class="selectable" data-column="PersonCount">Person Count</th>
                                    <th class="selectable" data-column="Description">Description</th>
                                    <th class="selectable" data-column="IsActive">Is Active</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.FilteredClassList)
                                {
                                    <tr class="data-row" data-id="@item.Id">
                                        <td>@item.Id</td>
                                        <td>@item.Name</td>
                                        <td>@item.PersonCount</td>
                                        <td>@item.Description</td>
                                        <td>@(item.IsActive ? "Yes" : "No")</td>
                                        <td>
                                            <a asp-page="/Index" asp-route-editId="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                                            <form method="post" asp-page-handler="Delete" style="display:inline;">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <nav>
                            <ul class="pagination mb-0">
                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                        <a class="page-link"
                                           asp-page="/Index"
                                           asp-route-SearchClassName="@Model.SearchClassName"
                                           asp-route-MinStudentCount="@Model.MinStudentCount"
                                           asp-route-PageNumber="@i">@i</a>
                                    </li>
                                }
                            </ul>
                        </nav>

                        <form method="post" asp-page-handler="Export" id="exportForm" class="mb-0">
                            <input type="hidden" name="SelectedColumns" id="SelectedColumns" />
                            <input type="hidden" name="SelectedRowIds" id="SelectedRowIds" />
                            <button type="submit" class="btn btn-primary me-2" style="background-color: #e754a3; border: none;">
                                Export JSON
                            </button>
                            <button type="button" id="clearAll" class="btn btn-secondary">Clear All</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const selectedColumns = new Set(JSON.parse(sessionStorage.getItem("selectedColumns") || "[]"));
        const selectedRows = new Set(JSON.parse(sessionStorage.getItem("selectedRows") || "[]"));

        document.addEventListener("DOMContentLoaded", function () {
            selectedColumns.forEach(col => {
                document.querySelector(`th[data-column='${col}']`)?.classList.add("highlight-column");
            });

            selectedRows.forEach(id => {
                document.querySelector(`tr[data-id='${id}']`)?.classList.add("highlight-row");
            });

            document.querySelectorAll("th.selectable").forEach(th => {
                th.addEventListener("click", () => {
                    const columnName = th.getAttribute("data-column");
                    if (selectedColumns.has(columnName)) {
                        selectedColumns.delete(columnName);
                        th.classList.remove("highlight-column");
                    } else {
                        selectedColumns.add(columnName);
                        th.classList.add("highlight-column");
                    }
                    sessionStorage.setItem("selectedColumns", JSON.stringify([...selectedColumns]));
                });
            });

            document.querySelectorAll("tr.data-row").forEach(tr => {
                tr.addEventListener("click", () => {
                    const rowId = tr.getAttribute("data-id");
                    if (selectedRows.has(rowId)) {
                        selectedRows.delete(rowId);
                        tr.classList.remove("highlight-row");
                    } else {
                        selectedRows.add(rowId);
                        tr.classList.add("highlight-row");
                    }
                    sessionStorage.setItem("selectedRows", JSON.stringify([...selectedRows]));
                });
            });

            document.getElementById("exportForm").addEventListener("submit", function () {
                document.getElementById("SelectedColumns").value = [...selectedColumns].join(",");
                document.getElementById("SelectedRowIds").value = [...selectedRows].join(",");
            });

            document.getElementById("clearAll").addEventListener("click", () => {
                sessionStorage.removeItem("selectedColumns");
                sessionStorage.removeItem("selectedRows");
                location.reload();
            });

            const checkbox = document.getElementById("isActiveCheckbox");
            checkbox.addEventListener("change", function () {
                if (this.checked) {
                    this.style.backgroundColor = "#ff69b4";
                    this.style.borderColor = "#ff69b4";
                } else {
                    this.style.backgroundColor = "";
                    this.style.borderColor = "";
                }
            });
        });
    </script>
}

<style>
    .pagination .page-item.active .page-link {
        background-color: #ff85c0; 
        border-color: #ff85c0;
        color: white;
    }

    .table-wrapper {
        max-height: calc(100vh - 370px);
        overflow-y: auto;
    }

    th.selectable {
        cursor: pointer;
    }

    th.highlight-column {
        background-color: #ff00c3;
        color: white;
    }

    tr.highlight-row {
        background-color: #ffe0f7 !important;
    }

    .btn-pink {
        background-color: #ff69b4; 
        border: none;
        color: white;
    }
    .btn-pink:hover {
        background-color: #ff85c0; 
        color: white;
    }

    /* Checkbox stilini iyileştirme */
    .form-check-input {
        width: 1.2em;
        height: 1.2em;
        cursor: pointer;
        accent-color: #ff69b4; 
    }s

    .form-check-input:checked {
        background-color: #ff69b4; /* İşaretlendiğinde pembe renk */
        border-color: #ff69b4;
    }

    .form-check-label {
        margin-left: 0.5em;
        cursor: pointer;
    }
</style>